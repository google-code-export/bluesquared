#summary EA 4 - API
#labels Phase-Design,EfficiencyAssist
= API =

API for modules communicating with Core.
<br>
#  [developerAPI#Setup_API]
#  [developerAPI#Update_API]


==Setup_API==
Commands that allow Core to know if the active module needs to be Setup before it can be used.

Each package adds variables to the `setup()` array, within the `namespace eval` proc, such as:
{{{
namespace eval eAssistSetup {
    global setup
   set setup($packageName,<identifier>) <value>
}
}}}

To determine if we require a setup before using, each package should use this syntax
{{{
setup($packageName,setupReqd) <yes/no>
}}}

That way we can create a `proc` to look at those variables, to determine if we need to process it further. Such as looking to see if the setup on it has been complete or not.

Once setup has been *completed* lets issue another variable
<br>
NOTE: When saving, cycle through all listed 'required' variables, and if they are all set, then set the 'setupComplete' variable to yes. See issue 90
{{{
set setup($packageName,setupComplete) <yes/no>
}}}

Using the *`package`* command, we can figure out what packages are loaded. Then, filter on the *`eAssist_`* keyword that we use to prefix all of the project-centric packages.

{{{
foreach value [package names] {
    if {[string match eAssist_* $value] == 1} {
        puts $value
        }
}
}}}

===Variables for Setup_API===
{{{
setup($packageName,setupReqd) <yes/no>
setup($packageName,setupComplete)<yes/no>
}}}


==Update_API==

Check for updates; update program when new updates are available.